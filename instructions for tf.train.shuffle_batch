shuffle还要配合参数min_after_dequeue使用才能发挥作用。 
这个参数min_after_dequeue的意思是队列中，做dequeue（取数据）的操作后，queue runner线程要保证队列中至少剩下min_after_dequeue个数据。 
如果min_after_dequeue设置的过少，则即使shuffle为true，也达不到好的混合效果。

这个地方可能不太好理解，我尝试解释一下吧，但可能解释的不太好。 
假设你有一个队列，现在里面有m个数据，你想要每次随机从队列中取n个数据，则代表先混合了m个数据，再从中取走n个。 
当第一次取走n个后，队列就变为m-n个数据； 
当你下次再想要取n个时，假设队列在此期间插进来了k个数据，则现在的队列中有 
(m-n+k)个数据，则此时会从混合的(m-n+k)个数据中随机取走n个，。如果队列填充的速度比较慢，k就比较小，
那你取出来的n个数据只是与周围很小的一部分(m-n+k)个数据进行了混合。

换句话说，在读取一次和补充一次之后，剩下的(m-n+k)个数据要保证m-n+k>=min_after_dequeue。

因为我们的目的肯定是想尽最大可能的混合数据，因此设置min_after_dequeue，可以保证每次dequeue后都有足够量的数据填充尽队列，
保证下次dequeue时可以很充分的混合数据。

但是min_after_dequeue也不能设置的太大，这样会导致队列填充的时间变长，尤其是在最初的装载阶段，会花费比较长的时间。

